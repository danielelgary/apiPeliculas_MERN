{"version":3,"sources":["ComponenteClase.js","app/componentes/Resultados.js","app/config/config.js","app/paginas/ResultadosBusqueda.js","app/servicios/PeliculasService.js","app/componentes/DetalleActores.js","app/componentes/DetalleNominaciones.js","app/componentes/DetalleGeneral.js","app/paginas/DetallePelicula.js","app/paginas/AdministrarPeliculas.js","app/paginas/Login.js","app/servicios/UsuariosService.js","app/componentes/Header.js","app/routes/Routes.js","App.js","reportWebVitals.js","index.js"],"names":["React","Component","Resultados","props","history","useHistory","className","onClick","evento","push","pelicula","_id","alt","src","poster","titulo","sinopsis","icon","faStarHalfAlt","rating","URL_API_PELICULAS","ResultadosBusqueda","useState","busqueda","setBusqueda","peliculaBuscada","setPeliculaBuscada","useEffect","length","fetch","method","mode","then","respuestaServidor","status","json","Promise","reject","statusText","catch","error","console","log","resultadosBusqueda","data","onSubmit","preventDefault","type","id","name","onChange","tituloPelicula","target","value","placeholder","map","DetalleActores","datos","idx","nombre","apellido","DetalleNominaciones","cantidad","ganadas","DetalleGeneral","DetallePelicula","useParams","setPelicula","respuesta","ok","PeliculasService","ano","clasificacion","actores","generos","idiomas","paises","nominaciones","directores","AdministrarPeliculas","Login","usuario","setUsuario","clave","setClave","handleChange","htmlFor","UsuariosService","token","datosUsuario","roles","localStorage","setItem","JSON","stringify","autenticado","Header","handleClick","removeItem","children","Routes","auth","getItem","exact","path","component","to","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c5f093e.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default class ComponenteClase extends React.Component{\n    /*\n        Aqui van:\n            Constructor\n            Atributos / estados\n            Metodos\n             -> Metodo obligatorio (render() que debe retornar codigo JSX)\n    */\n\n    render(){\n        return(\n            <> \n                <h3>Mi componente de clase</h3>\n                <span>Autor: Daniel Gaviria</span>\n            </>\n        );\n    };\n\n}","import \"../estilos/Resultados.css\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faStarHalfAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { useHistory } from \"react-router\";\n\nexport default function Resultados(props) {\n\n    let history = useHistory();\n\n    //props son las propiedades del componente que se usan para:\n    // -    dar valores iniciales antes del renderizado.\n    // -    dar configuraciones antes del renderizado.\n    // -    llevar objetos a un lugar especifico del componente antes del renderizado.\n    \n    //console.log(props);\n\n    //EVENTOS: agregan interactividad y obtencion de valores.\n    function handleClick(evento){\n        \n        history.push(\"/detalle/\" + props.pelicula._id);\n\n        /*\n        evento.preventDefault();\n        //Parar las propagaciones hacia los eventos padre\n        evento.stopPropagation(); //Cuando se tienen varios contenedores y varios tienen el evento click, entonces el evento se propagaria.\n        alert(\"Redireccionar al detalle de la película\")\n        */\n    }\n    /*\n    function handleClickImg(evento){\n        evento.stopPropagation();\n        alert(\"Click en la imagen\");\n    }\n    */\n\n    return (\n        <>\n\n            <div className=\"divPelicula\" onClick={handleClick}>\n                <div className=\"divPoster\">\n                    <img alt=\"Póster\" src={props.pelicula.poster} />\n\n                </div>\n                <div className=\"divTitulo\">\n                    <h2>{props.pelicula.titulo}</h2>\n                </div>\n                <div>\n                    <p>{props.pelicula.sinopsis}</p>\n                </div>\n                <div>\n                    <span>\n                        <FontAwesomeIcon icon={faStarHalfAlt} />\n                        {props.pelicula.rating}\n                        \n                    </span>\n                </div>\n            </div>\n        </>\n    );\n}","//Servidor donde esta en este momento.\nexport const URL_API_PELICULAS = \"http://44.200.28.118:3000/api\";","import Resultados from \"../componentes/Resultados\";\nimport \"../estilos/ResultadosBusqueda.css\";\nimport { useState, useEffect } from \"react\"; \n//import peliculasDB from \"../../peliculas150.json\";\nimport * as PeliculasService from \"../servicios/PeliculasService\"\n\nexport default function ResultadosBusqueda() {\n\n    //DECLARANDO EL ESTADO:\n    const [busqueda, setBusqueda] = useState(\"\"); //valor inicial es la cadena vacia\n\n    //Este estado es para poder que cada que cambia el estado del cuadro de busqueda\n    //deben cambiar las peliculas llamadas en los componentes.\n    //ESTADO: como la interactividad va a realizar que el componente se actualice y renderice nuevamente\n    const [peliculaBuscada, setPeliculaBuscada] = useState([]);\n\n    /*\n        HOOKS\n        1. SIEMPRE SE EJECUTA LA PRIMERA VEZ -> MONTAJE\n        2. OOIR CADA CAMBIO DE ESTADO, DESPUES DE RENDERIZAR SE EJECUTA -> ACTUALIZACION\n            Se controla colocando la condicion que nos dice si no ha cambio para poder actualizar\n        3. ADICIONAR UN RETURN -> DESMONTAJE\n    */\n\n\n    useEffect\n    (\n        () =>\n        {\n            if(busqueda.length >= 4){\n                PeliculasService.servicioBusquedaTitulo(busqueda)\n                .then(function(resultadosBusqueda){\n                    setPeliculaBuscada(resultadosBusqueda.data);\n                });\n            }\n            else{\n                setPeliculaBuscada([]);\n            }\n                    \n            //let resultadosBusqueda = peliculasDB.slice(0, busqueda.length);\n            //setPeliculaBuscada(resultadosBusqueda);\n            \n            return () => \n            {\n                //Acciones de desmontaje\n            }\n        },\n        [busqueda]\n    );\n\n\n    //Para llamar con los className se suele usar -> tipo de elemento - responsabilidad(funcionalidad) - id (opcional)\n    //dv-busqueda-xxxx -> formato muy utilizado.\n\n\n    //En programacion de eventos se recomienda usar la convencion handle como prefijo + Funcionalidad +id (opcional)\n    //handleSubmit\n\n    //CONTROLANDO ELEMENTOS EN REACT A TRAVES DE SUS EVENTOS\n\n    function handleSubmit(evento){ //Recibe el contenedor del evento como parametro de la funcion\n        evento.preventDefault();\n    }\n\n    function handleChange(evento){ //Control de elementos\n        //console.log(evento);\n        //console.log(evento.target);\n        //console.log(evento.target.value);\n        let tituloPelicula = evento.target.value;\n        //uno de los puntos de entrada para modificar los estados son los eventos\n\n\n        /*if(tituloPelicula.length > 3){\n            let resultadosBusqueda = new Array(tituloPelicula.length).fill(0);\n            setPeliculaBuscada(resultadosBusqueda);\n        }\n        else{\n            setPeliculaBuscada([]);\n        }\n        */\n\n        setBusqueda(tituloPelicula);\n    }\n\n\n    return (\n        <>\n            <div className=\"divBusqueda\">\n                <form onSubmit={handleSubmit}>\n                    <fieldset>\n\n                        <legend>Buscar Peliculas</legend>\n\n                        <input type=\"text\" id=\"busqueda\" name=\"busqueda\" onChange={handleChange} placeholder=\"Titulo de la pelicula\"></input>\n\n                    </fieldset>\n                </form>\n            </div>\n\n            <div>\n                <fieldset>\n\n                    <legend>Listado Peliculas</legend>\n                    <div> \n                        <span>Mostrando resultado para: {busqueda}</span>\n                    </div>\n                    <div className=\"divResultados\">\n                        {\n                            peliculaBuscada && peliculaBuscada.length > 0 && peliculaBuscada.map(pelicula => (\n                                <Resultados pelicula={pelicula}/>\n                            ))\n                        }\n                    </div>\n\n                </fieldset>\n            </div>\n        </>\n    );\n}","//Para hacer los llamados a la API\nimport { URL_API_PELICULAS } from \"../config/config\";\n\nexport function servicioBusquedaTitulo(titulo){\n\n    const path = \"/peliculas/obtenerPeliculaPorTitulo/\" + titulo;\n\n    /*\n        FETCH -> Cargar por HTTP recursos externos\n            - APIS\n            - ARCHIVOS\n            - MICROSERVICIOS\n\n        Necesita:\n         - URL\n         - Ruta del recurso a cargar\n         - Configuracion:\n            - Method\n            - Mode -> CORS\n            - HEADERS -> Info adicional de cabeceras\n            - BODY -> POST / PUT\n    */\n\n    //No se necesita HEADERS porque no usa tokens que se mandan por header\n    //No se necesita cuerpo porque es un metodo GET\n    const config = \n    {\n        method: \"GET\",\n        mode: \"cors\"\n    }\n\n    return fetch(URL_API_PELICULAS + path, config)\n        .then(function(respuestaServidor){\n            if(respuestaServidor.status === 200){\n                //Respondio OK\n                return respuestaServidor.json();\n            }\n            else{\n                Promise.reject(respuestaServidor.statusText);\n            }\n        })\n        .catch((error) => console.log(error));\n\n}\n\nexport function servicioBusquedaID(id){\n\n    const path = \"/peliculas/obtenerPelicula/\" + id;\n\n    const config =\n    {\n        method: \"GET\",\n        mode: \"cors\"\n    }\n\n    return fetch(URL_API_PELICULAS + path, config)\n                .then(function(respuesta){\n                    if(respuesta.ok){\n                        return respuesta.json();\n                    }\n                    else{\n                        return Promise.reject(respuesta.statusText);\n                    }\n                })\n                .catch((error) => console.log(error));\n}","export default function DetalleActores(props){\n\n    return(\n        <>\n            <fieldset>\n                <legend>{props.titulo}</legend>\n                <ul>\n                    {props.datos && props.datos.map((datos, idx) =>\n                        (\n                            <li key={idx}>{datos.nombre} {datos.apellido}</li>\n                        )\n                    )}\n                </ul>\n            </fieldset>\n        </>\n    )\n}","export default function DetalleNominaciones(props){\n\n    return(\n        <>\n            <fieldset>\n                <legend>{props.titulo}</legend>\n                {props.datos && \n                    <ul>\n                        <li key={1}>Cantidad: {props.datos.cantidad} </li>\n                        <li key={2}>Gandas: {props.datos.ganadas} </li>\n                    </ul>\n                }\n\n\n            </fieldset>\n        </>\n    )\n}","export default function DetalleGeneral(props){\n\n    return(\n        <>\n            <fieldset>\n                <legend>{props.titulo}</legend>\n                <ul>\n                    { props.datos && props.datos.map((datos, idx) => \n                        (\n                            <li key={idx}> {datos}  </li>\n                        )\n                    )}\n                </ul>\n            </fieldset>\n        </>\n    )\n}","import { useParams } from \"react-router\";\nimport DetalleActores from \"../componentes/DetalleActores\";\nimport DetalleNominaciones from \"../componentes/DetalleNominaciones\";\nimport DetalleGeneral from \"../componentes/DetalleGeneral\";\nimport \"../estilos/DetallePelicula.css\";\nimport { useState, useEffect } from \"react\";\nimport * as PeliculasService from \"../servicios/PeliculasService\";\n\n\n\nexport default function DetallePelicula(){\n\n    const { id } = useParams();\n    const [pelicula, setPelicula] = useState({});\n\n    useEffect(  \n        () => {\n            PeliculasService.servicioBusquedaID(id)\n                .then(function(respuesta){\n                    setPelicula(respuesta.data);\n                })\n                .catch((error) => console.log(error));\n    },[id]);\n    /*\n        Que necesitamos para construir la interfaz?\n        1. Datos externos:\n            - Id de la Pelicula -> Extraerlos de los Params de la URL\n        2. Definir si necesitamos los estados / Propiedades:\n            - Pelicula\n        3. Definir si se necesitan efectos:\n            - Solo montaje\n        4. Componentes que se necesitan? Cuales y Cuantos?\n            - Detalle Actores -> Array de objetos\n            - Detalle Nominaciones -> Objeto\n            - Detalles Generales : Generos/Idiomas/Paises... -> Array\n    */\n\n    return (\n        <>\n            <div className=\"DivDetalleDetalle\">\n                <fieldset>\n                    <legend>Detalle Pelicula </legend>\n                    <h2> {pelicula.titulo} </h2>\n                    <div className=\"DivMainDetalle\">\n                        \n                        <div className=\"DivPosterDetalle\">\n                            <img alt=\"Poster\" src={pelicula.poster}/>\n                        </div>\n\n                        <div>\n                            <fieldset>\n                                <legend>Año</legend>\n                                <span>{pelicula.ano}</span>\n                            </fieldset>\n\n                            <fieldset>\n                                <legend>Rating</legend>\n                                <span>{pelicula.rating}</span>\n                            </fieldset>\n\n                            <fieldset>\n                                <legend>Clasificacion</legend>\n                                <span>{pelicula.clasificacion}</span>\n                            </fieldset>\n                        </div>\n\n                        <div> \n                            <fieldset>\n                                <legend>Sinopsis</legend>\n                                <p>{pelicula.sinopsis}</p>\n                            </fieldset>\n                        </div>\n\n\n                    </div>\n                </ fieldset>\n            </div>\n                 \n            <div>\n                <fieldset>\n                    <legend>Detalle</legend>\n                    <DetalleActores titulo=\"Actores\" datos={pelicula.actores} />\n                    <div className=\"DivDatosDetalle\">\n                        <DetalleGeneral titulo=\"Generos\" datos={pelicula.generos} />\n                        <DetalleGeneral titulo=\"Idiomas\" datos={pelicula.idiomas} />\n                        <DetalleGeneral titulo=\"Paises\" datos={pelicula.paises}/>\n                        <DetalleNominaciones titulo=\"Nominaciones\" datos={pelicula.nominaciones} />\n                    </div>\n                    <DetalleGeneral titulo=\"Directores\"  datos={pelicula.directores}/>\n                </fieldset>\n            </div>\n        </>\n    );\n}","export default function AdministrarPeliculas(){\n\n    \n    return (\n        <>\n            <div>\n                <h1>AdministrarPeliculas</h1>\n            </div>\n        </>\n    );\n}","import { useState } from \"react\";\n//import Resultados from \"../componentes/Resultados\";\nimport * as UsuariosService from \"../servicios/UsuariosService\";\nimport { useHistory } from \"react-router\";\n\nexport default function Login(props){\n    const [usuario, setUsuario] = useState(\"\");\n    const [clave, setClave] = useState(\"\");\n    let history = useHistory();\n\n    function handleChange(evento){\n        if(evento.target.name === \"usuario\"){\n            setUsuario(evento.target.value);\n        }\n        else if(evento.target.name === \"clave\"){\n            setClave(evento.target.value);\n        }\n    }\n\n    function handleClick(evento){\n        evento.preventDefault();\n        UsuariosService.servicioIniciarSesion(usuario, clave)\n            .then(function(respuesta){\n                //validar la info del usuario\n                if(respuesta.token){\n                    const datosUsuario = \n                    {\n                        token: respuesta.token,\n                        nombre: respuesta.datos.nombre,\n                        roles: respuesta.datos.roles\n                    }\n                    //investigar sessionStorage\n                    //investigar setCookie\n                    \n                    localStorage.setItem(\"auth\", JSON.stringify(datosUsuario));\n                    props.autenticado(datosUsuario);\n                    history.push(\"/administrar\");\n                    \n                }\n            })\n            .catch((error) => console.log(error));\n    }\n\n    return (\n        <>\n            <div>\n                <fieldset>\n                    <legend>Iniciar Sesion</legend>\n                    <form>\n                        <table>\n                            <tbody>         \n                            <tr>\n                                <td>\n                                    <label htmlFor=\"usuario\">Usario: </label>\n                                </td>\n                                <td>\n                                    <input type=\"text\" id=\"usuario\" name=\"usuario\" value={usuario} onChange={handleChange}></input>\n                                </td>\n                            </tr>\n\n                            <tr>\n                                <td>\n                                    <label htmlFor=\"clave\">Contraseña: </label>\n                                </td>\n                                <td>\n                                    <input type=\"password\" id=\"clave\" name=\"clave\" value={clave} onChange={handleChange}></input>\n                                </td>\n                            </tr>\n                            \n\n                            <tr>\n                                <td></td>\n                                <td>\n                                    <button type=\"button\" onClick={handleClick}>Iniciar Sesion</button>\n                                </td>\n                            </tr>\n                            </tbody>\n                        </table>\n\n                    </form>\n                </fieldset>\n\n            </div>\n        </>\n    );\n}","import { URL_API_PELICULAS } from \"../config/config\";\n\nexport function servicioIniciarSesion(usuario, clave){\n\n    const path = \"/usuarios/iniciarSesion?usuario=\" + usuario + \"&clave=\" + clave; //Para poder consumir la ruta de inicio de sesion.\n\n    const config =\n    {\n        method: \"GET\",\n        mode: \"cors\"\n    }\n\n    return fetch(URL_API_PELICULAS + path, config)\n        .then(function(respuesta){\n            if(respuesta.ok){\n                return respuesta.json();\n            }\n            else{\n                return Promise.reject(respuesta.statusText);\n            }\n        });\n\n\n}","import \"../estilos/header.css\";\nimport { useHistory } from \"react-router\";\n\n\nexport default function Header(props){\n\n    let history = useHistory();\n\n    function handleClick(evento){\n        evento.preventDefault();\n        if(evento.target.value === \"iniciar\"){\n            history.push(\"/login\");\n        }\n        else{\n            localStorage.removeItem(\"auth\");\n            props.autenticado(null);\n            history.push(\"/\");\n        }\n    }\n\n    return (\n        <>\n            <header className=\"header\"> \n                {\n                    props.usuario && //Es como decirle, si existe este, haga el que sigue\n                    <button type=\"button\" onClick={handleClick} value=\"cerrar\">Cerrar Sesion</button>\n                }\n                {\n                    !props.usuario &&\n                    <button type=\"button\" onClick={handleClick} value=\"iniciar\">Iniciar Sesion</button>\n\n                }\n            </header>\n            {props.children /* Para saber cual de los hijos renderizar */} \n        </>\n    );\n}","import { Switch, Route, Redirect } from \"react-router\";\nimport ResultadosBusqueda from \"../paginas/ResultadosBusqueda\";\nimport DetallePelicula from \"../paginas/DetallePelicula\";\nimport AdministrarPeliculas from \"../paginas/AdministrarPeliculas\";\nimport Login from \"../paginas/Login\";\nimport Header from \"../componentes/Header\";\nimport { useState } from \"react\";\n\nexport default function Routes(){\n\n    const auth = localStorage.getItem(\"auth\");\n\n    const [usuario, setUsuario] = useState(auth);\n\n    return (\n        <Switch>\n            <Header usuario={usuario} autenticado={setUsuario}>\n                <Route exact path=\"/\" component={ResultadosBusqueda} />\n                <Route path=\"/detalle/:id\" component={DetallePelicula} />\n                <Route path=\"/administrar\">\n                    {\n                        usuario ? <AdministrarPeliculas /> : <Redirect to=\"/login\" />\n                    }\n                </Route>\n                <Route path=\"/login\">\n                    <Login autenticado={setUsuario} />\n                </Route>\n            </Header>\n\n        </ Switch>\n    );\n}","import ComponenteFuncional from \"./ComponenteFuncional\";\nimport ComponenteFuncionalArray from \"./ComponenteFuncionalArray\";\nimport ComponenteClase from \"./ComponenteClase\";\nimport ResultadosBusqueda from \"./app/paginas/ResultadosBusqueda\";\nimport Routes from \"./app/routes/Routes\";\nimport Header from \"./app/componentes/Header\";\n\nfunction App() {\n\n  let datos = [\n    {\n      \"nombre\" : \"Daniel\",\n      \"apellido\" : \"Gaviria\"\n    },\n    {\n      \"nombre\" : \"Camila\",\n      \"apellido\" : \"Foronda\"\n    }\n  ];\n\n  return (\n    <>\n\n      <h1>CREANDO COMPONENETES CON REACT</h1>\n      \n      {/*\n      <ComponenteFuncional nombre=\"Daniel\" apellido=\"Gaviria\"/>\n      <ComponenteFuncional nombre=\"Camila\" apellido=\"Foronda\"/>\n      <ComponenteFuncional nombre=\"Sara\" apellido=\"Gaviria\"/>\n\n      <ComponenteFuncionalArray personas = {datos} />\n\n      <ComponenteClase />\n      */}\n      \n      \n        <Routes />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom'; //Renderiza codigo JSX a HTML\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}